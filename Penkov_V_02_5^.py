# 1. Три точки заданы своими координатами X(x1, x2), Y(y1, y2) и Z(z1, z2). Найти и напечатать координаты точки, для которой угол между осью абсцисс и лучом, соединяющим начало координат с точкой, минимальный. Вычисления оформить в виде процедуры.
def w(x, y):
    return y / ((x * x + y * y) ** 0.5)


x1, x2 = map(float, input("Укажите значения x1 и x2, пожалуйста: ").split())
y1, y2 = map(float, input("Укажите значения y1 и y2, пожалуйста: ").split())
z1, z2 = map(float, input("Укажите значения z1 и z2, пожалуйста: ").split())
qx = w(x1, x2)
qy = w(y1, y2)
qz = w(z1, z2)
result = [x1, x2]
if qy < qx:
    result = [y1, y2]
if qz < qy:
    result = [z1, z2]
else:
    if qz < qx:
        result = [z1, z2]
print(result)

# 2. Найти все простые натуральные числа, не превосходящие n, двоичная запись которых представляет собой палиндром, т. е. читается одинаково слева направо и справа налево.
number = int(input("Укажите, пожалуйста, число, до которого будем искать все числа-палиндромы на промежутке: "))
n = number
out = []
def w(x):
 d = 2


 while d * d <= x and x % d != 0:
       d += 1
 return d * d > x


for i in range(1, number + 1):
 if w(i) and bin(i)[2: : ] == bin(i)[2::][::-1]:
  out.append(i)
print("Числа, двоичная запись которых является палиндромом: ", ", ".join(map(str, out)))
